#
# Corrected Azure Pipeline for Spring Boot CI/CD with SonarQube Community Edition
#
trigger:
  branches:
    include:
      - main

pool:
  vmImage: 'ubuntu-latest'

variables:
  # This variable holds the SSH private key from your pipeline's variable library.
  SSH_PRIVATE_KEY: $(sshPrivateKey)

steps:
# ----------------------------------------------------------------
# Step 1: Prepare SonarQube Analysis Configuration
# This task configures the scanner for a Maven project before the build runs.
# ----------------------------------------------------------------
- task: SonarQubePrepare@5
  inputs:
    SonarQube: 'MySonarQubeService'
    scannerMode: 'Maven'   # FIX: Sets the mode to 'Maven' to resolve the 'undefined mode' error.
    extraProperties: |
      # This property tells SonarQube where to find the compiled Java .class files.
      sonar.java.binaries=target

# ----------------------------------------------------------------
# Step 2: Build Project & Run SonarQube Analysis with Maven
# The 'sonar:sonar' goal tells Maven to perform the SonarQube analysis
# and publish the results directly to the server.
# ----------------------------------------------------------------
- task: Maven@3
  inputs:
    mavenPomFile: 'pom.xml'
    goals: 'clean package sonar:sonar' # FIX: Adds 'sonar:sonar' to run the analysis.
    options: '-DskipTests'

# NOTE: The old 'SonarQubeAnalyze' and 'SonarQubePublish' tasks have been removed
# as they are redundant when using the 'sonar:sonar' goal with Maven.

# ----------------------------------------------------------------
# Step 3: Deploy the application to the Virtual Machine
# This step remains unchanged from your original file.
# ----------------------------------------------------------------
- script: |
    echo "$SSH_PRIVATE_KEY" > key.pem
    chmod 600 key.pem

    echo "Creating app directory on remote VM..."
    ssh -i key.pem -o StrictHostKeyChecking=no azureuser@4.172.227.190 'mkdir -p /home/azureuser/app'

    echo "Copying JAR to remote VM..."
    scp -i key.pem -o StrictHostKeyChecking=no target/*.jar azureuser@4.172.227.190:/home/azureuser/app/app.jar

    echo "Restarting Spring Boot app..."
    ssh -i key.pem -o StrictHostKeyChecking=no azureuser@4.172.227.190 << EOF
      pkill -f 'java -jar' || true
      nohup java -jar /home/azureuser/app/app.jar > /home/azureuser/app/app.log 2>&1 &
    EOF
  displayName: 'Deploy to VM2'
