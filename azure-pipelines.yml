trigger:
  branches:
    include:
      - main

pool:
  vmImage: 'ubuntu-latest'

variables:
  SONAR_TOKEN: $(SONAR_TOKEN)
  SSH_PRIVATE_KEY: $(sshPrivateKey)

steps:
- task: SonarQubePrepare@5
  inputs:
    SonarQube: 'MySonarQubeService'
    scannerMode: 'CLI'
    configMode: 'manual'
    cliProjectKey: 'springboot-ci-cd'
    cliSources: 'src'
    extraProperties: |
      sonar.java.binaries=target
      sonar.projectName=springboot-ci-cd
      sonar.host.url=http://20.151.164.85:9000
      sonar.login=$(SONAR_TOKEN)

- task: Maven@3
  inputs:
    mavenPomFile: 'pom.xml'
    goals: 'clean package'
    options: '-DskipTests'

- task: SonarQubeAnalyze@5

- task: SonarQubePublish@5
  inputs:
    pollingTimeoutSec: '300'

- script: |
    echo "$SSH_PRIVATE_KEY" > key.pem
    chmod 600 key.pem

    echo "Creating app directory on remote VM..."
    ssh -i key.pem -o StrictHostKeyChecking=no azureuser@4.172.227.190 'mkdir -p /home/azureuser/app'

    echo "Copying JAR to remote VM..."
    scp -i key.pem -o StrictHostKeyChecking=no target/*.jar azureuser@4.172.227.190:/home/azureuser/app/app.jar

    echo "Restarting Spring Boot app..."
    ssh -i key.pem -o StrictHostKeyChecking=no azureuser@4.172.227.190 << EOF
      pkill -f 'java -jar' || true
      nohup java -jar /home/azureuser/app/app.jar > /home/azureuser/app/app.log 2>&1 &
    EOF
  displayName: 'Deploy to VM2'
