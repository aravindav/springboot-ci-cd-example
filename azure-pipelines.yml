trigger:
  branches:
    include:
      - main

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: SonarQubePrepare@5
  inputs:
    SonarQube: 'MySonarQubeService'
    scannerMode: 'Other'
    configMode: 'manual'
    cliProjectKey: 'springboot-ci-cd'
    cliSources: 'src'
    extraProperties: |
      sonar.java.binaries=target
      sonar.projectName=springboot-ci-cd
      sonar.host.url=http://20.151.164.85:9000
      sonar.branch.name=

- task: Maven@3
  inputs:
    mavenPomFile: 'pom.xml'
    goals: 'clean verify sonar:sonar'
    options: '-DskipTests -Dsonar.branch.name=""'

- task: DownloadSecureFile@1
  name: sshKey
  inputs:
    secureFile: 'ci-cd-vm_key.pem'  # replace with exact name if different

- script: |
    chmod 600 $(sshKey.secureFilePath)

    echo "Creating app directory on remote VM..."
    ssh -i $(sshKey.secureFilePath) -o StrictHostKeyChecking=no azureuser@$4.172.227.190 'mkdir -p /home/azureuser/app'

    echo "Copying JAR to remote VM..."
    scp -i $(sshKey.secureFilePath) -o StrictHostKeyChecking=no target/*.jar azureuser@$4.172.227.190:/home/azureuser/app/app.jar

    echo "Restarting Spring Boot app..."
    ssh -i $(sshKey.secureFilePath) -o StrictHostKeyChecking=no azureuser@4.172.227.190 << EOF
      pkill -f 'java -jar' || true
      nohup java -jar /home/azureuser/app/app.jar > /home/azureuser/app/app.log 2>&1 &
    EOF
  displayName: 'Deploy to the VM2'
