trigger:
  branches:
    include:
      - main

pool:
  vmImage: 'ubuntu-latest'

variables:
- group: ci-cd-secrets

steps:
# Download Maven settings.xml from secure files
- task: DownloadSecureFile@1
  name: mavenSettings
  inputs:
    secureFile: 'settings.xml'  # Name exactly as uploaded

# Configure Maven settings.xml in agent
- script: |
    mkdir -p ~/.m2
    cp $(mavenSettings.secureFilePath) ~/.m2/settings.xml
  displayName: 'Configure Maven settings.xml'

# Build, push to JFrog, and run SonarQube analysis
- task: Maven@3
  inputs:
    mavenPomFile: 'pom.xml'
    goals: 'clean deploy sonar:sonar'
    options: '-DskipTests -Dsonar.login=$(SONAR_TOKEN) -Dsonar.host.url=http://20.151.164.85:9000'
  displayName: 'Build, Deploy to JFrog, & SonarQube Analysis'

# Download SSH private key for VM2
- task: DownloadSecureFile@1
  name: sshKey
  inputs:
    secureFile: 'ci-cd-vm_key.pem'

# SSH into VM2, download from JFrog, and restart app
- script: |
    chmod 600 $(sshKey.secureFilePath)

    echo "Deploying app on remote VM by pulling from JFrog Artifactory..."
    ssh -i $(sshKey.secureFilePath) -o StrictHostKeyChecking=no azureuser@4.172.227.190 << EOF
      mkdir -p /home/azureuser/app
      cd /home/azureuser/app

      echo "Downloading jar from JFrog..."
      wget --user=admin --password=Coding@123 "http://4.174.129.30:8082/artifactory/libs-release-local/com/example/springboot-ci-cd/1.0.0/springboot-ci-cd-1.0.0.jar" -O app.jar

      echo "Restarting app..."
      pkill -f 'java -jar' || true
      nohup java -jar app.jar > app.log 2>&1 &
    EOF
  displayName: 'Deploy to VM2 from JFrog'
